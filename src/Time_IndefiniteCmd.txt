module App

open System
open Elmish
open Elmish.React
open Feliz

module Cmd =
    let fromAsync operation =
        let delayedCmd dispatch =
            let delayedDispatch =
                async {
                    let! msg = operation
                    dispatch msg }

            Async.StartImmediate delayedDispatch

        Cmd.ofSub delayedCmd

    let indefinite timeout msg =
        let command dispatch =
            let workflow =
                async {
                    while true do
                        do! Async.Sleep timeout
                        dispatch msg
                }

            Async.StartImmediate workflow

        Cmd.ofSub command

type State =
    { CurrentTime: DateTime }

type Msg = | Tick

let init() = { CurrentTime = DateTime.Now }, Cmd.indefinite 1000 Tick

let update msg state =
    match msg with
    | Tick -> { state with CurrentTime = DateTime.Now }, Cmd.none

let formatTime (time: DateTime) =
    let padZero n =
        if n < 10 then sprintf "0%d" n else string n
    sprintf "%s:%s:%s" (padZero time.Hour) (padZero time.Minute) (padZero time.Second)

let render state dispatch =
    Html.div
        [ prop.style [ style.padding 20 ]
          prop.children [ Html.h1 (formatTime state.CurrentTime) ] ]

Program.mkProgram init update render
|> Program.withReactSynchronous "elmish-app"
|> Program.run
