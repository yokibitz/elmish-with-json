module App

open Elmish
open Elmish.React
open Feliz

type Validated<'t> =
    { Raw: string
      Parsed: Option<'t> }

module Validated =
    let createEmpty() =
        { Raw = ""
          Parsed = None }

    let success raw value =
        { Raw = raw
          Parsed = Some value }

    let failure raw =
        { Raw = raw
          Parsed = None }

type State =
    { NumberInput: Validated<int>
      StringInput: string
      Capitalized: bool }

type Msg =
    | SetNumberInput of Validated<int>
    | SetStringInput of string
    | SetCapitalized of bool

let init() =
    { NumberInput = Validated.createEmpty()
      StringInput = ""
      Capitalized = false }

let update msg state =
    match msg with
    | SetNumberInput numberInput -> { state with NumberInput = numberInput }
    | SetStringInput stringInput -> { state with StringInput = stringInput }
    | SetCapitalized value -> { state with Capitalized = value }

let tryParseInt input =
    try
        Validated.success input (int input)
    with _ -> Validated.failure input

let validatedTextColor validated =
    match validated.Parsed with
    | Some _ -> color.green
    | None -> color.crimson

let render state dispatch =
    Html.div
        [ prop.style [ style.padding 20 ]
          prop.children
              [ Html.input
                  [ prop.type'.number
                    prop.valueOrDefault state.NumberInput.Raw
                    prop.onChange
                        (tryParseInt
                         >> SetNumberInput
                         >> dispatch) ]
                Html.h1
                    [ prop.style [ style.color (validatedTextColor state.NumberInput) ]
                      prop.text state.NumberInput.Raw ]
                Html.input
                    [ prop.valueOrDefault state.StringInput
                      prop.onChange (SetStringInput >> dispatch) ]
                Html.div
                    [ Html.label
                        [ prop.htmlFor "checkbox-capitalized"
                          prop.text "Capitalized" ]
                      Html.input
                          [ prop.type'.checkbox
                            prop.isChecked state.Capitalized
                            prop.onCheckedChange (SetCapitalized >> dispatch) ] ]
                Html.h1 [ prop.text (if state.Capitalized then state.StringInput.ToUpper() else state.StringInput) ] ] ]

Program.mkSimple init update render
|> Program.withReactSynchronous "elmish-app"
|> Program.run
